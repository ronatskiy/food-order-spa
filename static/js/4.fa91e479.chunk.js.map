{"version":3,"sources":["hocs/visible-only-for-authenticated-user.tsx","components/supplier-badge/supplier-badge.tsx","utils/translate-day-name.ts","pages/week-order/components/my-orders.tsx","pages/week-order/index.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","mobx_react__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","NotAuthenticatedAlert","a","createElement","className","color","to","visibleOnlyForAuthenticatedUser","Control","inject","observer","props","appStore","identity","isAuthenticated","SupplierBadge","_ref","supplierName","translateDayName","dayShortName","d","__webpack_exports__","orders","days","hasOrders","length","react_default","reactstrap_es","responsive","bordered","size","map","_ref2","shortName","key","_ref3","shortDate","userOrder","find","o","day","supplier_badge","order","dishes","dish","id","name","MyWeekOrder","this","weekOrderPageStore","fetchOrders","nextWeekWorkingDays","components_my_orders","Component"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,KAOMM,EAAwB,kBAC7BL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAOM,UAAU,OAAOC,MAAM,UAC7BT,EAAAM,EAAAC,cAAA,yVACAP,EAAAM,EAAAC,cAAA,gKAC4B,IAC3BP,EAAAM,EAAAC,cAACH,EAAA,EAAD,CAAMI,UAAU,yBAAyBE,GAAG,UAA5C,+BAuBYC,IAZf,SAAkEC,GACjE,OAAOC,YAAO,WAAPA,CAAmBC,YACzB,SAAUC,GAGT,OAFqBA,EAAMC,SAAnBC,SAEQC,gBACZlB,EAAAM,EAAAC,cAACK,EAAYG,GACbf,EAAAM,EAAAC,cAACF,EAAD,4CC9BP,IAAAP,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,KAYeoB,IAJwB,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,aACzC,OAAOrB,EAAAM,EAAAC,cAAA,OAAKC,UAAU,kBAAkBa,4DCTlC,SAASC,EAAiBC,GAChC,MAAqB,QAAjBA,EACI,qEAEa,QAAjBA,EACI,6CAGa,QAAjBA,EACI,iCAGa,QAAjBA,EACI,6CAGa,QAAjBA,EACI,6CAGD,mDApBRxB,EAAAyB,EAAAC,EAAA,sBAAAH,0KCyDeR,sBA1CmB,SAAAM,GAAsB,IAAnBM,EAAmBN,EAAnBM,OAAQC,EAAWP,EAAXO,KACtCC,EAAYF,EAAOG,OAAS,EAElC,OACCC,EAAAxB,EAAAC,cAACwB,EAAA,EAAD,CAAOvB,UAAU,YAAYwB,YAAU,EAACC,UAAQ,EAACC,KAAK,MACrDJ,EAAAxB,EAAAC,cAAA,aACCuB,EAAAxB,EAAAC,cAAA,UACEoB,EAAKQ,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACTP,EAAAxB,EAAAC,cAAA,MAAI+B,IAAKD,GAAYf,YAAiBe,QAIxCT,GACAE,EAAAxB,EAAAC,cAAA,aACCuB,EAAAxB,EAAAC,cAAA,UACEoB,EAAKQ,IAAI,SAAAI,GAAmB,IAAhBC,EAAgBD,EAAhBC,UACNC,EAAYf,EAAOgB,KAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAIJ,YAAcA,IAEvD,OACCV,EAAAxB,EAAAC,cAAA,MAAI+B,IAAKE,GACPC,GACAX,EAAAxB,EAAAC,cAAA,WACCuB,EAAAxB,EAAAC,cAACsC,EAAA,EAAD,CAAexB,aAAcoB,EAAUK,MAAMzB,eAE5CoB,EAAUK,MAAMC,OAAOlB,OAAS,GAChCY,EAAUK,MAAMC,OAAOZ,IAAI,SAAAa,GAAI,OAC9BlB,EAAAxB,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8B,IAAKU,EAAKC,IAC9CD,EAAKE,kBC7BdC,EAFLtC,YAAO,wBACPC,0MAGCsC,KAAKrC,MAAMsC,mBAAoBC,+CAGvB,IAAAlC,EACgCgC,KAAKrC,MAAMsC,mBAA3C3B,EADAN,EACAM,OAAQ6B,EADRnC,EACQmC,oBAEhB,OACCzB,EAAAxB,EAAAC,cAAA,eACCuB,EAAAxB,EAAAC,cAAA,MAAIC,UAAU,gBAAd,8JACAsB,EAAAxB,EAAAC,cAACiD,EAAD,CAAU9B,OAAQA,EAAQC,KAAM4B,YAXVE,qBAkBX9C,sBAAgCwC","file":"static/js/4.fa91e479.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AppStore from \"../store/app-store\";\r\n\r\nconst NotAuthenticatedAlert = () => (\r\n\t<Alert className=\"my-3\" color=\"danger\">\r\n\t\t<div>Эта страница доступна только авторизированным пользователям.</div>\r\n\t\t<div>\r\n\t\t\tЧтобы продолжить выполните{\" \"}\r\n\t\t\t<Link className=\"btn btn-primary btn-sm\" to=\"/login\">\r\n\t\t\t\tВход\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t</Alert>\r\n);\r\n\r\ninterface InjectedProps {\r\n\tappStore?: AppStore;\r\n}\r\n\r\nfunction visibleOnlyForAuthenticatedUser<T extends InjectedProps>(Control: React.ComponentType<T>) {\r\n\treturn inject(\"appStore\")(observer(\r\n\t\tfunction (props: T) {\r\n\t\t\tconst { identity } = props.appStore!;\r\n\r\n\t\t\treturn identity.isAuthenticated\r\n\t\t\t\t? (<Control {...props} />)\r\n\t\t\t\t: (<NotAuthenticatedAlert />);\r\n\t\t}\r\n\t))\r\n}\r\n\r\nexport default visibleOnlyForAuthenticatedUser;\r\n","import React from \"react\";\r\n\r\nimport \"./supplier-badge.scss\";\r\n\r\ninterface Props {\r\n\tsupplierName: string;\r\n}\r\n\r\nconst SupplierBadge: React.FC<Props> = ({ supplierName }) => {\r\n\treturn <div className=\"supplier-badge\">{supplierName}</div>;\r\n};\r\n\r\nexport default SupplierBadge;\r\n","export function translateDayName(dayShortName: string) {\r\n\tif (dayShortName === \"Mon\") {\r\n\t\treturn \"Понедельник\";\r\n\t}\r\n\tif (dayShortName === \"Tue\") {\r\n\t\treturn \"Вторник\";\r\n\t}\r\n\r\n\tif (dayShortName === \"Wed\") {\r\n\t\treturn \"Среда\";\r\n\t}\r\n\r\n\tif (dayShortName === \"Thu\") {\r\n\t\treturn \"Четверг\";\r\n\t}\r\n\r\n\tif (dayShortName === \"Fri\") {\r\n\t\treturn \"Пятница\";\r\n\t}\r\n\r\n\treturn \"Выходной\";\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport Day from \"../../../domain/day\";\r\nimport UserOrder from \"../../../domain/user-order\";\r\nimport { translateDayName } from \"../../../utils/translate-day-name\";\r\nimport SupplierBadge from \"../../../components/supplier-badge/supplier-badge\";\r\nimport \"./my-orders.scss\";\r\n\r\ninterface Props {\r\n\torders: UserOrder[];\r\n\tdays: Day[];\r\n}\r\n\r\nconst MyOrders: React.FC<Props> = ({ orders, days }) => {\r\n\tconst hasOrders = orders.length > 0;\r\n\r\n\treturn (\r\n\t\t<Table className=\"my-orders\" responsive bordered size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{days.map(({ shortName }) => (\r\n\t\t\t\t\t\t<th key={shortName}>{translateDayName(shortName)}</th>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t{hasOrders && (\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{days.map(({ shortDate }) => {\r\n\t\t\t\t\t\t\tconst userOrder = orders.find(o => o.day.shortDate === shortDate);\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<td key={shortDate}>\r\n\t\t\t\t\t\t\t\t\t{userOrder && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<SupplierBadge supplierName={userOrder.order.supplierName} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{userOrder.order.dishes.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserOrder.order.dishes.map(dish => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"my-orders__dish-view\" key={dish.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dish.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t)}\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nexport default observer(MyOrders);\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nimport visibleOnlyForAuthenticatedUser from \"../../hocs/visible-only-for-authenticated-user\";\r\nimport WeekOrderPageStore from \"./store/week-order-page-store\";\r\nimport MyOrders from \"./components/my-orders\";\r\n\r\ninterface Props {\r\n\tweekOrderPageStore?: WeekOrderPageStore;\r\n}\r\n\r\n@inject(\"weekOrderPageStore\")\r\n@observer\r\nclass MyWeekOrder extends Component<Props> {\r\n\tpublic componentDidMount(): void {\r\n\t\tthis.props.weekOrderPageStore!.fetchOrders();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { orders, nextWeekWorkingDays } = this.props.weekOrderPageStore!;\r\n\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<h1 className=\"page-heading\">Мой заказ на следующую неделю</h1>\r\n\t\t\t\t<MyOrders orders={orders} days={nextWeekWorkingDays} />\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// @ts-ignore\r\nexport default visibleOnlyForAuthenticatedUser(MyWeekOrder);\r\n"],"sourceRoot":""}