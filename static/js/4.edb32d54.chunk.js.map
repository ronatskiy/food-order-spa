{"version":3,"sources":["hocs/visible-only-for-authenticated-user.tsx","components/supplier-badge/supplier-badge.tsx","utils/transform-day-name.ts","pages/week-order/components/my-orders.tsx","pages/week-order/index.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","mobx_react__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","NotAuthenticatedAlert","a","createElement","className","color","to","visibleOnlyForAuthenticatedUser","Control","inject","observer","props","rootStore","identity","isAuthenticated","SupplierBadge","_ref","supplierName","transformDayName","day","d","__webpack_exports__","MyOrders","orders","days","react_default","reactstrap_es","responsive","bordered","size","map","_ref2","shortName","key","length","_ref3","userOrder","find","o","supplier_badge","order","dishes","dish","id","name","MyWeekOrder","this","weekOrderPageStore","fetchOrders","components_my_orders","Component"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,KAOMM,EAAwB,kBAC7BL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAOM,UAAU,OAAOC,MAAM,UAC7BT,EAAAM,EAAAC,cAAA,yVACAP,EAAAM,EAAAC,cAAA,gKAC4B,IAC3BP,EAAAM,EAAAC,cAACH,EAAA,EAAD,CAAMI,UAAU,yBAAyBE,GAAG,UAA5C,+BAuBYC,IAZf,SAAkEC,GACjE,OAAOC,YAAO,YAAPA,CAAoBC,YAC1B,SAAUC,GAGT,OAFqBA,EAAMC,UAAnBC,SAEQC,gBACZlB,EAAAM,EAAAC,cAACK,EAAYG,GACbf,EAAAM,EAAAC,cAACF,EAAD,4CC9BP,IAAAP,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,KAYeoB,IAJwB,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,aACzC,OAAOrB,EAAAM,EAAAC,cAAA,OAAKC,UAAU,kBAAkBa,4DCTlC,SAASC,EAAiBC,GAChC,MAAY,QAARA,EACI,qEAEI,QAARA,EACI,6CAGI,QAARA,EACI,iCAGI,QAARA,EACI,6CAGI,QAARA,EACI,6CAGD,mDApBRxB,EAAAyB,EAAAC,EAAA,sBAAAH,0KCsDeI,UAxCmB,SAAAN,GAAsB,IAAnBO,EAAmBP,EAAnBO,OAAQC,EAAWR,EAAXQ,KAC5C,OACCC,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAOtB,UAAU,YAAYuB,YAAU,EAACC,UAAQ,EAACC,KAAK,MACrDJ,EAAAvB,EAAAC,cAAA,aACCsB,EAAAvB,EAAAC,cAAA,UACEqB,EAAKM,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACTP,EAAAvB,EAAAC,cAAA,MAAI8B,IAAKD,GAAYd,YAAiBc,QAIzCP,EAAAvB,EAAAC,cAAA,aACEoB,EAAOW,OAAS,GAChBT,EAAAvB,EAAAC,cAAA,UACEqB,EAAKM,IAAI,SAAAK,GAAmB,IAAhBH,EAAgBG,EAAhBH,UACNI,EAAYb,EAAOc,KAAK,SAAAC,GAAC,OAAIA,EAAEnB,IAAIa,YAAcA,IAEvD,OACCP,EAAAvB,EAAAC,cAAA,MAAI8B,IAAKD,GACPI,GACAX,EAAAvB,EAAAC,cAAA,WACCsB,EAAAvB,EAAAC,cAACoC,EAAA,EAAD,CAAetB,aAAcmB,EAAUI,MAAMvB,eAE5CmB,EAAUI,MAAMC,OAAOP,OAAS,GAChCE,EAAUI,MAAMC,OAAOX,IAAI,SAAAY,GAAI,OAC9BjB,EAAAvB,EAAAC,cAAA,OAAKC,UAAU,uBAAuB6B,IAAKS,EAAKC,IAC9CD,EAAKE,iBC1BdC,EAFLpC,YAAO,wBACPC,0MAGCoC,KAAKnC,MAAMoC,mBAAoBC,+CAGvB,IAAAhC,EACiB8B,KAAKnC,MAAMoC,mBAA5BxB,EADAP,EACAO,OAAQC,EADRR,EACQQ,KAEhB,OACCC,EAAAvB,EAAAC,cAAA,eACCsB,EAAAvB,EAAAC,cAAA,MAAIC,UAAU,gBAAd,uGACAqB,EAAAvB,EAAAC,cAAC8C,EAAD,CAAU1B,OAAQA,EAAQC,KAAMA,YAXV0B,qBAkBX3C,sBAAgCsC","file":"static/js/4.edb32d54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { RootStore } from \"../store\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst NotAuthenticatedAlert = () => (\r\n\t<Alert className=\"my-3\" color=\"danger\">\r\n\t\t<div>Эта страница доступна только авторизированным пользователям.</div>\r\n\t\t<div>\r\n\t\t\tЧтобы продолжить выполните{\" \"}\r\n\t\t\t<Link className=\"btn btn-primary btn-sm\" to=\"/login\">\r\n\t\t\t\tВход\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t</Alert>\r\n);\r\n\r\ninterface InjectedProps {\r\n\trootStore?: RootStore;\r\n}\r\n\r\nfunction visibleOnlyForAuthenticatedUser<T extends InjectedProps>(Control: React.ComponentType<T>) {\r\n\treturn inject(\"rootStore\")(observer(\r\n\t\tfunction (props: T) {\r\n\t\t\tconst { identity } = props.rootStore!;\r\n\r\n\t\t\treturn identity.isAuthenticated\r\n\t\t\t\t? (<Control {...props} />)\r\n\t\t\t\t: (<NotAuthenticatedAlert />);\r\n\t\t}\r\n\t))\r\n}\r\n\r\nexport default visibleOnlyForAuthenticatedUser;\r\n","import React from \"react\";\r\n\r\nimport \"./supplier-badge.scss\";\r\n\r\ninterface Props {\r\n\tsupplierName: string;\r\n}\r\n\r\nconst SupplierBadge: React.FC<Props> = ({ supplierName }) => {\r\n\treturn <div className=\"supplier-badge\">{supplierName}</div>;\r\n};\r\n\r\nexport default SupplierBadge;\r\n","export function transformDayName(day: string) {\r\n\tif (day === \"Mon\") {\r\n\t\treturn \"Понедельник\";\r\n\t}\r\n\tif (day === \"Tue\") {\r\n\t\treturn \"Вторник\";\r\n\t}\r\n\r\n\tif (day === \"Wed\") {\r\n\t\treturn \"Среда\";\r\n\t}\r\n\r\n\tif (day === \"Thu\") {\r\n\t\treturn \"Четверг\";\r\n\t}\r\n\r\n\tif (day === \"Fri\") {\r\n\t\treturn \"Пятница\";\r\n\t}\r\n\r\n\treturn \"Выходной\";\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport Day from \"../../../entities/day\";\r\nimport { UserOrder } from \"../../../entities/types\";\r\nimport { transformDayName } from \"../../../utils/transform-day-name\";\r\nimport SupplierBadge from \"../../../components/supplier-badge/supplier-badge\";\r\nimport \"./my-orders.scss\";\r\n\r\ninterface Props {\r\n\torders: UserOrder[];\r\n\tdays: Day[];\r\n}\r\n\r\nconst MyOrders: React.FC<Props> = ({ orders, days }) => {\r\n\treturn (\r\n\t\t<Table className=\"my-orders\" responsive bordered size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{days.map(({ shortName }) => (\r\n\t\t\t\t\t\t<th key={shortName}>{transformDayName(shortName)}</th>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{orders.length > 0 && (\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{days.map(({ shortName }) => {\r\n\t\t\t\t\t\t\tconst userOrder = orders.find(o => o.day.shortName === shortName);\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<td key={shortName}>\r\n\t\t\t\t\t\t\t\t\t{userOrder && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<SupplierBadge supplierName={userOrder.order.supplierName} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{userOrder.order.dishes.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserOrder.order.dishes.map(dish => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"my-orders__dish-view\" key={dish.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dish.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nexport default MyOrders;\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nimport visibleOnlyForAuthenticatedUser from \"../../hocs/visible-only-for-authenticated-user\";\r\nimport WeekOrderPageStore from \"./store/week-order-page-store\";\r\nimport MyOrders from \"./components/my-orders\";\r\n\r\ninterface Props {\r\n\tweekOrderPageStore?: WeekOrderPageStore;\r\n}\r\n\r\n@inject(\"weekOrderPageStore\")\r\n@observer\r\nclass MyWeekOrder extends Component<Props> {\r\n\tpublic componentDidMount(): void {\r\n\t\tthis.props.weekOrderPageStore!.fetchOrders();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { orders, days } = this.props.weekOrderPageStore!;\r\n\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<h1 className=\"page-heading\">Мой заказ на неделю</h1>\r\n\t\t\t\t<MyOrders orders={orders} days={days} />\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// @ts-ignore\r\nexport default visibleOnlyForAuthenticatedUser(MyWeekOrder);\r\n"],"sourceRoot":""}