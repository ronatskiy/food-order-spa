{"version":3,"sources":["pages/my-order/index.tsx","hocs/visible-only-for-authenticated-user.tsx"],"names":["MyOrder","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","React","Component","visibleOnlyForAuthenticatedUser","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","mobx_react__WEBPACK_IMPORTED_MODULE_2__","NotAuthenticatedAlert","_ref","onLogin","color","onClick","size","Control","inject","observer","props","identity","rootStore","isAuthenticated","login"],"mappings":"mKAIMA,mLAEJ,OACCC,EAAAC,EAAAC,cAAA,eACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,6GACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sPACAF,EAAAC,EAAAC,cAAA,8WAPkBE,IAAMC,WAabC,sBAAgCP,oCCjB/C,IAAAQ,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,IASMK,EAAwB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAC7BN,EAAAR,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,OAAOa,MAAM,UAC7BP,EAAAR,EAAAC,cAAA,yVACAO,EAAAR,EAAAC,cAAA,gKAC4B,IAC3BO,EAAAR,EAAAC,cAACS,EAAA,EAAD,CAAQM,QAASF,EAASG,KAAK,KAAKF,MAAM,WAA1C,+BAuBYV,IAZf,SAAkEa,GACjE,OAAOC,YAAO,YAAPA,CAAoBC,YAC1B,SAAUC,GAAU,IACXC,EAAaD,EAAME,UAAnBD,SAER,OAAOA,EAASE,gBACZhB,EAAAR,EAAAC,cAACiB,EAAYG,GACbb,EAAAR,EAAAC,cAACW,EAAD,CAAuBE,QAAS,kBAAMQ,EAASG","file":"static/js/3.695ff8d6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport visibleOnlyForAuthenticatedUser from \"../../hocs/visible-only-for-authenticated-user\";\n\nclass MyOrder extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h1 className=\"page-heading\">Мой заказ на сегодня</h1>\n\t\t\t\t<hr />\n\t\t\t\t<p>Здесь будет перечень заказанных вами обедов</p>\n\t\t\t\t<p>А также обед который вы могли забронировать в таблице расшаренных</p>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default visibleOnlyForAuthenticatedUser(MyOrder);\n","import React from \"react\";\r\nimport { Alert, Button } from \"reactstrap\";\r\nimport { RootStore } from \"../store\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\ninterface Props {\r\n\tonLogin(): void;\r\n}\r\n\r\nconst NotAuthenticatedAlert = ({ onLogin }: Props) => (\r\n\t<Alert className=\"my-3\" color=\"danger\">\r\n\t\t<div>Эта страница доступна только авторизированным пользователям.</div>\r\n\t\t<div>\r\n\t\t\tЧтобы продолжить выполните{\" \"}\r\n\t\t\t<Button onClick={onLogin} size=\"sm\" color=\"primary\">\r\n\t\t\t\tВход\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t</Alert>\r\n);\r\n\r\ninterface InjectedProps {\r\n\trootStore?: RootStore;\r\n}\r\n\r\nfunction visibleOnlyForAuthenticatedUser<T extends InjectedProps>(Control: React.ComponentType<T>) {\r\n\treturn inject(\"rootStore\")(observer(\r\n\t\tfunction (props: T) {\r\n\t\t\tconst { identity } = props.rootStore!;\r\n\r\n\t\t\treturn identity.isAuthenticated\r\n\t\t\t\t? (<Control {...props} />)\r\n\t\t\t\t: (<NotAuthenticatedAlert onLogin={() => identity.login()}/>);\r\n\t\t}\r\n\t))\r\n}\r\n\r\nexport default visibleOnlyForAuthenticatedUser;\r\n"],"sourceRoot":""}